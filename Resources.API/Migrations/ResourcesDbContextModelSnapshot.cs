// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resources.API.Data;

#nullable disable

namespace Resources.API.Migrations
{
    [DbContext(typeof(ResourcesDbContext))]
    partial class ResourcesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2");

            modelBuilder.Entity("Resources.API.Models.Competency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Competencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Python"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Java"
                        },
                        new
                        {
                            Id = 5,
                            Name = "SQL"
                        },
                        new
                        {
                            Id = 6,
                            Name = "React"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Node.js"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Docker"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Azure"
                        });
                });

            modelBuilder.Entity("Resources.API.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateOnly(1990, 1, 1),
                            Name = "John Doe",
                            YearsOfExperience = 5
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateOnly(1985, 6, 15),
                            Name = "Jane Smith",
                            YearsOfExperience = 8
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateOnly(1995, 3, 20),
                            Name = "Bob Johnson",
                            YearsOfExperience = 3
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateOnly(1992, 8, 10),
                            Name = "Alice Brown",
                            YearsOfExperience = 6
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateOnly(1988, 12, 25),
                            Name = "Charlie Wilson",
                            YearsOfExperience = 10
                        });
                });

            modelBuilder.Entity("Resources.API.Models.ResourceCompetency", b =>
                {
                    b.Property<int>("ResourceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetencyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ResourceId", "CompetencyId");

                    b.HasIndex("CompetencyId");

                    b.ToTable("ResourceCompetencies");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CompetencyId = 1
                        },
                        new
                        {
                            ResourceId = 1,
                            CompetencyId = 6
                        },
                        new
                        {
                            ResourceId = 2,
                            CompetencyId = 2
                        },
                        new
                        {
                            ResourceId = 2,
                            CompetencyId = 7
                        },
                        new
                        {
                            ResourceId = 3,
                            CompetencyId = 3
                        },
                        new
                        {
                            ResourceId = 3,
                            CompetencyId = 8
                        },
                        new
                        {
                            ResourceId = 4,
                            CompetencyId = 4
                        },
                        new
                        {
                            ResourceId = 4,
                            CompetencyId = 9
                        },
                        new
                        {
                            ResourceId = 5,
                            CompetencyId = 5
                        },
                        new
                        {
                            ResourceId = 5,
                            CompetencyId = 10
                        });
                });

            modelBuilder.Entity("Resources.API.Models.ResourceCompetency", b =>
                {
                    b.HasOne("Resources.API.Models.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resources.API.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("Resource");
                });
#pragma warning restore 612, 618
        }
    }
}
